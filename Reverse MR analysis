# Load the packages you need to use, if you don't have them installed, you need to install them in advance.
library(TwoSampleMR)
library(data.table)
library(tidyverse)
library(readxl)
library(writexl)
library(mr.raps)
library(ieugwasr)
library(dplyr)
library(MendelianRandomization)


# Put the outcome GWAS summary data under the working directory you have set up. Here we place data from immune cells not screened for P-values
FileNames <-list.files(paste0(getwd()),pattern=".gz")  
outcomeids <- FileNames
out_comes <- FileNames

## The "mendelian test" folder is automatically generated in the working directory and is used to store the output.
dir.create(path = "mendelian test")


# Change the name of the exposed file you are using for yourself
exp<-fread("FinnGen-AMD.csv",header = T)
exp$Phenotype <- 'AMD'  # Change the name to the name of the exposed phenotype you use for yourself
head(exp)

exp<-subset(exp,pval<5e-8)  ### The p-value can be changed by yourself
fwrite(exp, "exp_clumped1.csv")

exp_data<-read_exposure_data(filename = "exp_clumped1.csv",sep = ",")


d4<- ld_clump(
  clump_kb = 10000,
  clump_r2 = 0.001,   
  pop = "EUR",
  dplyr::tibble(rsid=exp_data$SNP, pval=exp_data$pval.exposure, id=exp_data$id.exposure),
  plink_bin = "E:/plink/plink_win64_20230116/plink.exe",
  bfile = "E:/plink/EUR/EUR"
)

exp_data<-subset(exp_data,SNP %in% d4$rsid) 

 ##### Here is the loop code
for (qaq in 1:length(outcomeids)) { # 
outcomeid <- outcomeids[qaq]
out_come <- out_comes[qaq]
  
  
  if(length(exp_data[,1])>0){
    
    out<- try(fread(paste0(getwd(),"/",FileNames[qaq]),fill=TRUE),silent = F)
    outcomeid <- out
    exp_data$chrpos= paste(exp_data$chr.exposure, exp_data$pos.exposure, sep = ":")
    outcome_dat<-merge(exp_data,outcomeid,by.x = "SNP",by.y = "SNP")
    head(out)
    out_data<-format_data(outcome_dat,type="outcome")
    
    ### Exclusion of SNPs strongly associated with outcome
    out_data <- subset(out_data,pval.outcome>5e-8)
    
    if(length(out_data[,1])>0){  
      dat <- TwoSampleMR::harmonise_data(
        exposure_dat = exp_data,
        outcome_dat = out_data,action = 2)
      
      #### Removal of palindromic SNPs
      dat <-subset(dat,mr_keep==TRUE)
      
      
      ##### Calculate the F-statistic and R2
      dat <- get_f(dat, F_value = 10)
      
      
      ##############MR-PRESSO  
      if (nrow(dat) > 3) {
        mr_presso_res <- mr_Presso(dat, num = 1000)
        mr_presso_main <- mr_presso_pval(mr_presso_res)
        dat <- mr_presso_snp(mr_presso_res, mr_presso_main, dat, type = "data")
        
        resMRPRESSO=mr_presso_res[["Main MR results"]]
        resMRPRESSO
        global_test_p <- mr_presso_res[["MR-PRESSO results"]][["Global Test"]][["Pvalue"]]
        se1=sqrt(((resMRPRESSO[1,3])^2)/qchisq(Pval_raw <- resMRPRESSO[1,6],1,lower.tail=F))
        se2=sqrt(((beta_cor <- resMRPRESSO[2,3])^2)/qchisq(Pval_cor <- resMRPRESSO[2,6],1,lower.tail=F))
        resMRPRESSO <- resMRPRESSO %>%
          dplyr::mutate(se = c(se1,se2))
        
        #globe test_P and outliers
        outliers <- dat$SNP[mr_presso_res[["MR-PRESSO results"]][["Distortion Test"]][["Outliers Indices"]]]
        outliers = as.data.frame(outliers)
        outliers <- paste(outliers$outliers, collapse = ", ")
        global_test_p = as.data.frame(global_test_p)
        resMRPRESSO
        TTT <- as.data.frame(resMRPRESSO)
        TTT
        openxlsx::write.xlsx(TTT, paste0("mendelian test/",out_come,"-MR-PRESSO.xlsx"))
      }    
      dat <-subset(dat,mr_keep==TRUE)
      res <-choose_MR(dat=dat)
      res_hete <-purrr::map(.x=seq_along(res),
                            .f=~res[[.x]][[1]])
      res_hete <-do.call(rbind,res_hete)
      res_hete
      res1 <- generate_odds_ratios(res[[1]][[2]])
      res1
      res1$estimate <- paste0(
        format(round(res1$or, 2), nsmall = 2), " (", 
        format(round(res1$or_lci95, 2), nsmall = 2), "-",
        format(round(res1$or_uci95, 2), nsmall = 2), ")")
      res1
      print(paste0(exp,"_SNPæ•°_",res1$nsnp[1]))
      resdata <- dat
      openxlsx::write.xlsx(dat,file = paste0("mendelian test/",out_come,"-dat.xlsx"), rowNames = FALSE)
      
      openxlsx::write.xlsx(res1,paste0("mendelian test/",out_come,"-res.xlsx"))
      
      
      ###### The steiger test
      res_steiger <- steiger_test(dat) 
      
      library(magrittr)
      res3 <- res1
      res3 <- res3[,-c(10:14)]
      res4 <- tidyr::pivot_wider(
        res3,names_from ="method",names_vary = "slowest",
        values_from = c("b","se","pval","estimate") )
      
      col_names <- colnames(res4)
      
      new_col_names <- gsub("\\(.*\\)", "", col_names)
      
      colnames(res4) <- new_col_names
      
      ##steiger
      res_steiger2 <- dplyr::select(res_steiger,
                                    correct_causal_direction,steiger_pval)

      
      
      # Merge
      res_ALL <- cbind(res4, res_steiger2
      )
      res_ALL$F <- mean(dat$F,na.rm=TRUE)
      res_ALL$R2 <- sum(dat$R2)
      
      
      
      if (length(dat[, 1]) > 0 && length(dat[, 1]) <= 2) {
        write.csv(res_ALL, file = paste0("mendelian test/", out_come, "1.csv"), row.names = FALSE)
      } else {
        res_plei <- TwoSampleMR::mr_pleiotropy_test(dat)
        res_leaveone <- mr_leaveoneout(dat)
        
        p1 <- mr_scatter_plot(res[[1]][[2]], dat)
        pdf(paste0("mendelian test/", out_come, "_scatter.pdf"))
        print(p1[[1]])
        dev.off()
        
        res_single <- mr_singlesnp(dat)
        p2 <- mr_forest_plot(res_single)
        pdf(paste0("mendelian test/", out_come, "_forest.pdf"))
        print(p2[[1]])
        dev.off()
        
        p3 <- mr_funnel_plot(res_single)
        pdf(paste0("mendelian test/", out_come, "_funnel.pdf"))
        print(p3[[1]])
        dev.off()
        
        res_loo <- mr_leaveoneout(dat)
        pdf(paste0("mendelian test/", out_come, "_leave_one_out.pdf"))
        print(mr_leaveoneout_plot(res_loo))
        dev.off()
        
        
        
        res_hete2 <- tidyr::pivot_wider(
          res_hete, names_from = "method", names_vary = "slowest",
          values_from = c("Q", "Q_df", "Q_pval")
        ) %>% 
          dplyr::select(-id.exposure, -id.outcome, -outcome, -exposure)
        res_hete2 <- res_hete2[, 4:6]
        
        res_plei2 <- dplyr::select(res_plei, egger_intercept, se, pval)
        
        res_ALL <- cbind(res_ALL, res_hete2, res_plei2)
        
        if (nrow(dat) > 3) {
          
          res_ALL$outliers <- outliers
          res_ALL <- cbind(res_ALL, global_test_p)
        }
        write.csv(res_ALL, file = paste0("mendelian test/", out_come, ".csv"), row.names = FALSE)
      }
    }
  }
}

# Combine results and perform FDR correction
fs=list.files("working directory/mendelian test/", pattern = "csv",full.names = TRUE) 
df = map_dfr(fs, read.csv)
df <- df %>%
  mutate(fdr_Inverse.variance.weighted. = p.adjust(pval_Inverse.variance.weighted., method = "fdr")) %>%
  relocate(fdr_Inverse.variance.weighted., .after = pval_Inverse.variance.weighted.)
write.csv(df,"mendelian testres.csv")


exp_data$chrpos= paste(exp_data$chr.exposure, exp_data$pos.exposure, sep = ":")
